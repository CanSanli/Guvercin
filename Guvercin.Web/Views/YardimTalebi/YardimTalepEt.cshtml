@model GuvercinApp.Models.TalepModel
@{
    ViewBag.Title = "Yardım Talep Et";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Harita ve Konum Formu</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.css" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        #map {
            height: 500px;
        }

        .form-container {
            padding: 20px;
        }

        .autocomplete-suggestions {
            border: 1px solid #d4d4d4;
            background-color: #343a40;
            max-height: 200px;
            overflow-y: auto;
            position: absolute;
            z-index: 1000;
        }

        .autocomplete-suggestion {
            padding: 10px;
            cursor: pointer;
        }

            .autocomplete-suggestion:hover {
                background-color: #495057;
            }

        .list-group-item {
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .list-group-item:hover {
                background-color: #f8f9fa;
            }
    </style>
</head>
<body class="bg-light">

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                <div id="map"></div>
            </div>
            <div class="col-md-4 form-container">
                <h3>Konum Bilgileri</h3>
                @using (Html.BeginForm("Save", "YardimTalebi", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label for="address">Adres</label>
                        <input type="text" class="form-control" id="address" name="yardimTalebi.Adres" placeholder="Adres">
                        <div id="autocomplete-results" class="autocomplete-suggestions"></div>
                    </div>
                    <div class="form-group">
                        <label for="helpType">Yardım Türü</label>
                        @Html.DropDownListFor(model => model.YardimTalebi.YardimTuruId,
                        ViewBag.YardimTurleri as SelectList,
                        "Yardım Türü Seçiniz",
                        new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="description">Açıklama</label>
                        <input type="text" class="form-control" id="description" name="yardimTalebi.Aciklama" placeholder="Açıklama">
                    </div>
                    <input type="hidden" id="enlem" name="Enlem" />
                    <input type="hidden" id="boylam" name="Boylam" />
                    <button type="submit" class="btn btn-primary">Yardım İste</button>
                }

                <h4>Yardım Talepleri</h4>
                <ul id="helpRequests" class="list-group"></ul>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        // Leaflet Harita Ayarları
        var map = L.map('map').setView([39.9334, 32.8597], 6); // Türkiye merkezli başlangıç noktası
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Pinleri saklamak için dizi
        var markers = [];
        var maxPins = 3;

        // Nominatim API ile adres otomatik tamamlama
        function initAutocomplete() {
            var input = document.getElementById('address');
            input.addEventListener('input', function () {
                var query = input.value;
                if (query.length < 3) {
                    document.getElementById('autocomplete-results').innerHTML = '';
                    return;
                }
                fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=5`)
                    .then(response => response.json())
                    .then(data => {
                        var resultsContainer = document.getElementById('autocomplete-results');
                        resultsContainer.innerHTML = '';
                        data.forEach(item => {
                            var suggestion = document.createElement('div');
                            suggestion.classList.add('autocomplete-suggestion');
                            suggestion.textContent = item.display_name;
                            suggestion.addEventListener('click', function () {
                                input.value = item.display_name;
                                document.getElementById('autocomplete-results').innerHTML = '';
                                document.getElementById('enlem').value = item.lat;
                                document.getElementById('boylam').value = item.lon;
                                moveToLocation(item.lat, item.lon);
                                addMarker(item.lat, item.lon, item.display_name);
                            });
                            resultsContainer.appendChild(suggestion);
                        });
                    });
            });
        }

        function moveToLocation(lat, lon) {
            map.setView([lat, lon], 13);
        }

        function addMarker(lat, lon, description) {
            if (markers.length >= maxPins) {
                alert("Maksimum 3 pin ekleyebilirsiniz.");
                return;
            }
            var marker = L.marker([lat, lon]).addTo(map)
                .bindPopup(description + '<br><button onclick="removeMarker(this)">Sil</button>');
            markers.push({ marker, lat, lon });
            map.setView([lat, lon], 13);
        }

        function removeMarker(button) {
            var marker = markers.find(m => m.marker.getPopup().getContent().includes(button.outerHTML));
            if (marker) {
                map.removeLayer(marker.marker);
                markers = markers.filter(m => m !== marker);
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            initAutocomplete();
        });
    </script>

</body>
</html>